{"ast":null,"code":"var _jsxFileName = \"/Users/petenguyen/Desktop/ReactPlay/githubcopy/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport PropTypes from 'prop-types';\nimport Time from './time';\n\nfunction FileList({\n  files\n}) {\n  return React.createElement(\"table\", {\n    className: \"file-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, files.map(file => React.createElement(FileListItem, {\n    key: file.id,\n    file: file,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }))));\n}\n\nFileList.propTypes = {\n  files: PropTypes.array\n};\n\nfunction FileListItem({\n  file\n}) {\n  return React.createElement(\"tr\", {\n    className: \"file-list-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(FileName, {\n    file: file,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(CommitMessage, {\n    file: file.latestCommit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }));\n}\n\nFileListItem.propTypes = {\n  file: PropTypes.object.isRequired\n};\n\nfunction FileIcon({\n  file\n}) {\n  let icon = 'fa-file-text-o';\n\n  if (file.type === 'folder') {\n    icon = 'fa-folder';\n  }\n\n  return React.createElement(\"td\", {\n    className: \"file-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: 'fa ${icon}',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }));\n}\n\nFileIcon.propTypes = {\n  file: PropTypes.object.isRequired\n};\n\nfunction FileName({\n  file\n}) {\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(FileIcon, {\n    file: file,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    className: \"file-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, file.name));\n}\n\nFileName.propTypes = {\n  file: PropTypes.object.isRequired\n};\n\nconst CommitMessage = ({\n  file\n}) => React.createElement(\"td\", {\n  className: \"commit-message\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63\n  },\n  __self: this\n}, file.message);\n\nCommitMessage.propTypes = {\n  file: PropTypes.object.isRequired\n};\nconst testFiles = [{\n  id: 1,\n  name: 'src',\n  type: 'folder',\n  updated_at: '2016-07-11 21:24:00',\n  latestCommit: {\n    message: 'Initial commit'\n  }\n}, {\n  id: 2,\n  name: 'tests',\n  type: 'folder',\n  updated_at: '2016-07-11 21:24:00',\n  latestCommit: {\n    message: 'Initial commit'\n  }\n}, {\n  id: 3,\n  name: 'README',\n  type: 'file',\n  updated_at: '2016-07-18 21:24:00',\n  latestCommit: {\n    message: 'Added a readme'\n  }\n}];\nReactDOM.render(React.createElement(FileList, {\n  files: testFiles,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 100\n  },\n  __self: this\n}), document.querySelector('#root'));","map":{"version":3,"sources":["/Users/petenguyen/Desktop/ReactPlay/githubcopy/src/index.js"],"names":["React","ReactDOM","PropTypes","Time","FileList","files","map","file","id","propTypes","array","FileListItem","latestCommit","object","isRequired","FileIcon","icon","type","FileName","name","CommitMessage","message","testFiles","updated_at","render","document","querySelector"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport PropTypes from 'prop-types';\nimport Time from './time';\n\nfunction FileList({ files }) {\n    return (\n        <table className=\"file-list\">\n            <tbody>\n                {files.map(file => (\n                    <FileListItem key={file.id} file={file} />\n                ))}\n            </tbody>\n        </table>\n    );\n}\nFileList.propTypes = {\n    files: PropTypes.array\n};\n\nfunction FileListItem({ file }) {\n    return (\n        <tr className=\"file-list-item\">\n            <FileName file={file} />\n            <CommitMessage file={file.latestCommit} />\n        </tr>\n    );\n}\nFileListItem.propTypes = {\n    file: PropTypes.object.isRequired\n};\n\nfunction FileIcon({ file }) {\n    let icon = 'fa-file-text-o';\n    if (file.type === 'folder') {\n        icon = 'fa-folder';\n    }\n\n    return (\n        <td className=\"file-icon\">\n            <i className={'fa ${icon}'} />\n        </td>\n    );\n}\nFileIcon.propTypes = {\n    file: PropTypes.object.isRequired\n};\n\nfunction FileName({ file }) {\n    return (\n        <React.Fragment>\n            <FileIcon file={file} />\n            <td className=\"file-name\">{file.name}</td>\n        </React.Fragment>\n    );\n}\nFileName.propTypes = {\n    file: PropTypes.object.isRequired\n};\n\nconst CommitMessage = ({ file }) => (\n    <td className=\"commit-message\">{file.message}</td>\n);\nCommitMessage.propTypes = {\n    file: PropTypes.object.isRequired\n};\n\nconst testFiles = [\n    {\n        id: 1,\n        name: 'src',\n        type: 'folder',\n        updated_at: '2016-07-11 21:24:00',\n        latestCommit: {\n            message: 'Initial commit'\n        }\n    },\n    {\n        id: 2,\n        name: 'tests',\n        type: 'folder',\n        updated_at: '2016-07-11 21:24:00',\n        latestCommit: {\n            message: 'Initial commit'\n        }\n    },\n    {\n        id: 3,\n        name: 'README',\n        type: 'file',\n        updated_at: '2016-07-18 21:24:00',\n        latestCommit: {\n            message: 'Added a readme'\n        }\n    }\n];\n\nReactDOM.render(\n    <FileList files={testFiles} />,\n    document.querySelector('#root')\n);\n"]},"metadata":{},"sourceType":"module"}